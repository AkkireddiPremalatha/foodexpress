spring.application.name=GatewayMicroservice

server.port=8087

#spring.cloud.gateway.server.webflux.discovery.locator.enabled=true
#spring.cloud.gateway.default-filters[0]=DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
#spring.cloud.gateway.globalcors.corsConfigurations['/**'].allowedOrigins=*
#spring.cloud.gateway.globalcors.corsConfigurations['/**'].allowedMethods=*
#spring.cloud.gateway.globalcors.corsConfigurations['/**'].allowedHeaders=*
 
 
#spring.cloud.gateway.routes[0].id=AuthenticationModule
#spring.cloud.gateway.routes[0].uri=lb://AuthenticationModule
#spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/urbanclean/**
# 
#spring.cloud.gateway.routes[1].id=PickupScheduling
#spring.cloud.gateway.routes[1].uri=lb://PickupScheduling
#spring.cloud.gateway.routes[1].predicates[0]=Path=/api/v1/urbanclean/supervisor/schedules/**
##spring.cloud.gateway.routes[1].filters[0]=AuthenticationFilter
# 
#spring.cloud.gateway.routes[2].id=ZoneRouteManagement
#spring.cloud.gateway.routes[2].uri=lb://ZoneRouteManagement
#spring.cloud.gateway.routes[2].predicates[0]=Path=/api/v1/urbanclean/admin/zones**,/api/v1/urbanclean/admin/zones/{zoneId}/routes/**
##spring.cloud.gateway.routes[2].filters[0]=AuthenticationFilter
# 
#spring.cloud.gateway.routes[3].id=CreditCard-Management-Mircroservices
#spring.cloud.gateway.routes[3].uri=lb://CreditCard-Management-Mircroservices
#spring.cloud.gateway.routes[3].predicates[0]=Path=/creditcard/**
#spring.cloud.gateway.routes[3].filters[0]=AuthenticationFilter
# 
#spring.cloud.gateway.routes[4].id=Locker-Management-Mircroservices
#spring.cloud.gateway.routes[4].uri=lb://Locker-Management-Mircroservices
#spring.cloud.gateway.routes[4].predicates[0]=Path=/locker/**
#spring.cloud.gateway.routes[4].filters[0]=AuthenticationFilter
# 
#spring.cloud.gateway.routes[5].id=GiftCard-Management-Mircroservices
#spring.cloud.gateway.routes[5].uri=lb://GiftCard-Management-Mircroservices
#spring.cloud.gateway.routes[5].predicates[0]=Path=/giftcard/**
#spring.cloud.gateway.routes[5].filters[0]=AuthenticationFilter

eureka.instance.hostname=localhost
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
spring.cloud.compatibility-verifier.enabled=false